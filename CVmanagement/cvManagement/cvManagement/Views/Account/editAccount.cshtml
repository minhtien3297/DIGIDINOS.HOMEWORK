@model cvManagement.Models.Account

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Tao list Role-->
@functions{
    public static readonly List<SelectListItem> LIST_ROLE = new List<SelectListItem>() {
                        new SelectListItem { Text = "Human Resource", Value = "0"},
                        new SelectListItem { Text = "Interviewer", Value = "1"},
                        };
}
<style>
    .container {
        max-width: 960px;
    }

    .lh-condensed {
        line-height: 1.25;
    }
</style>
<script>
    (function () {
        'use strict'
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation')
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        }, false)
    })()
</script>
<div class="col-12 d-flex justify-content-between" style="padding:0px">
    <h2>Update account</h2>
    @Html.ActionLink("Back To List", "ShowAllAccounts", null, new { @class = "btn btn-secondary w-10 btn btn-primary btn-lg" })
</div>
<hr class="my-4">
@using (Html.BeginForm("EditAccount", "Account", null, FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PassWord)
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row g-3">
            @* Name *@
            <div class="col-12">
                <label for="accountname" class="form-label">Account name</label>
                <div class="input-group needs-validation">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                    <div class="invalid-feedback">
                        Please enter the account name.
                    </div>
                </div>
            </div>
            @* Password *@
            <div class="col-12">
                <label for="password" class="form-label">Password</label>
                <div class="input-group needs-validation">
                    @Html.Password("oldpassword", null, new { @class = "form-control", required = "required" })
                    @Html.ActionLink("Change password", "updatePassword", new { id = Model.Id }, new { @class = "btn btn-warning", @style = "color:white" })
                    <div class="invalid-feedback">
                        Please enter the password.
                    </div>
                </div>
            </div>
            @* Role *@
            <div class="col-12">
                <label for="address" class="form-label">Role</label>
                @Html.DropDownListFor(model => model.Role, LIST_ROLE, new { @class = "form-control" })
            </div>
        </div>
        <!--Buttons-->
        <hr class="my-4">
        <div class="col-12" style="padding:0px">
            <input type="submit" value="Submit" class="w-10 btn btn-primary btn-lg" />
        </div>
    </div>
}